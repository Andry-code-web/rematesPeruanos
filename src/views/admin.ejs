<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Remates</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/admin/admin.css">
</head>
<body>
    <div class="container">
        <header class="dashboard-header">
            <h1 class="dashboard-title">Gestión de Remates</h1>
            <p class="dashboard-subtitle">Sistema de administración de propiedades</p>
        </header>

        <div class="metrics-container">
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="bi bi-house-door"></i>
                </div>
                <div class="metric-info">
                    <div class="metric-value" id="totalRemates">0</div>
                    <div class="metric-label">Total de remates</div>
                </div>
            </div>
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="bi bi-graph-up"></i>
                </div>
                <div class="metric-info">
                    <div class="metric-value" id="rematesActivos">0</div>
                    <div class="metric-label">Remates activos</div>
                </div>
            </div>
            <div class="metric-card">
                <div class="metric-icon">
                    <i class="bi bi-currency-dollar"></i>
                </div>
                <div class="metric-info">
                    <div class="metric-value" id="montoTotal">$0</div>
                    <div class="metric-label">Monto total</div>
                </div>
            </div>
        </div>

        <div class="search-container">
            <i class="bi bi-search search-icon"></i>
            <input type="text" id="buscador" class="search-input" 
                   placeholder="Buscar por ubicación, precio o categoría..." 
                   onkeyup="buscarRemate()">
        </div>

        <div class="properties-grid" id="rematesGrid">
            <% remates.forEach(function(remate) { %>
                <div class="property-card" data-id="<%= remate.id %>">
                    <img src="/placeholder.svg?height=200&width=300" alt="Propiedad" class="property-image">
                    <div class="property-content">
                        <span class="property-status <%= remate.estado === 'activo' ? 'status-active' : 'status-inactive' %>">
                            <%= remate.estado %>
                        </span>
                        <h3 class="property-title"><%= remate.ubicacion %></h3>
                        <div class="property-price">$<%= remate.precios.toLocaleString() %></div>
                        <div class="property-details">
                            <div class="detail-item">
                                <i class="bi bi-building"></i>
                                <%= remate.categoria %>
                            </div>
                            <div class="detail-item">
                                <i class="bi bi-door-closed"></i>
                                <%= remate.N_habitacion %> hab.
                            </div>
                            <div class="detail-item">
                                <i class="bi bi-droplet"></i>
                                <%= remate.N_baños %> baños
                            </div>
                            <div class="detail-item">
                                <i class="bi bi-calendar"></i>
                                <%= new Date(remate.fecha_remate).toLocaleDateString() %>
                            </div>
                        </div>
                        <p class="property-description"><%= remate.descripcion %></p>
                        <div class="property-actions">
                            <button class="action-button" onclick="editarRemate(<%= remate.id %>)">
                                <i class="bi bi-pencil"></i>
                                Editar
                            </button>
                            <button class="action-button" onclick="eliminarRemate(<%= remate.id %>, '<%= remate.ubicacion %>')">
                                <i class="bi bi-trash"></i>
                                Eliminar
                            </button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>


    <!-- Modal de edición -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Editar Remate</h2>
                <button class="close-button" onclick="cerrarModal()">&times;</button>
            </div>
            <form id="editForm" onsubmit="guardarCambios(event)">
                <input type="hidden" id="editId" name="id">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="editUbicacion">Ubicación</label>
                        <input type="text" id="editUbicacion" name="ubicacion" required>
                    </div>
                    <div class="form-group">
                        <label for="editPrecio">Precio</label>
                        <input type="number" id="editPrecio" name="precios" required>
                    </div>
                    <div class="form-group">
                        <label for="editCategoria">Categoría</label>
                        <select id="editCategoria" name="categoria" required>
                            <option value="departamento">Departamento</option>
                            <option value="casa">Casa</option>
                            <option value="terreno">Terreno</option>
                            <option value="local">Local</option>
                            <option value="casa_playa">Casa Playa</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editHabitaciones">Habitaciones</label>
                        <input type="number" id="editHabitaciones" name="N_habitacion" min="0">
                    </div>
                    <div class="form-group">
                        <label for="editBanos">Baños</label>
                        <input type="number" id="editBanos" name="N_baños" min="0">
                    </div>
                    <div class="form-group">
                        <label for="editFechaRemate">Fecha de Remate</label>
                        <input type="date" id="editFechaRemate" name="fecha_remate" required>
                    </div>
                </div>
                <div class="form-group">
                    <label for="editDescripcion">Descripción</label>
                    <textarea id="editDescripcion" name="descripcion" required></textarea>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="cerrarModal()">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Función para actualizar métricas
        function actualizarMetricas() {
            const remates = document.querySelectorAll('.property-card');
            const totalRemates = remates.length;
            let rematesActivos = 0;
            let montoTotal = 0;

            remates.forEach(remate => {
                if (remate.querySelector('.status-active')) {
                    rematesActivos++;
                }
                const precio = parseFloat(remate.querySelector('.property-price').textContent.replace('$', '').replace(',', ''));
                montoTotal += precio;
            });

            document.getElementById('totalRemates').textContent = totalRemates;
            document.getElementById('rematesActivos').textContent = rematesActivos;
            document.getElementById('montoTotal').textContent = `$${montoTotal.toLocaleString()}`;
        }

        // Función para buscar remates
        function buscarRemate() {
            const input = document.getElementById('buscador').value.toLowerCase();
            const remates = document.querySelectorAll('.property-card');

            remates.forEach(remate => {
                const texto = remate.textContent.toLowerCase();
                remate.style.display = texto.includes(input) ? 'block' : 'none';
            }); 

            actualizarMetricas();
        }

        // Función para editar remate
        function editarRemate(id) {
            fetch(`/admin/remate/<% remates.id %>`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('editId').value = data.remate.id;
                        document.getElementById('editUbicacion').value = data.remate.ubicacion;
                        document.getElementById('editPrecio').value = data.remate.precios;
                        document.getElementById('editCategoria').value = data.remate.categoria;
                        document.getElementById('editHabitaciones').value = data.remate.N_habitacion;
                        document.getElementById('editBanos').value = data.remate.N_baños;
                        document.getElementById('editDescripcion').value = data.remate.descripcion;
                        document.getElementById('editFechaRemate').value = data.remate.fecha_remate.split('T')[0];
                        
                        document.getElementById('editModal').style.display = 'block';
                    } else {
                        Swal.fire('Error', 'No se pudo cargar la información del remate', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Error al cargar los datos del remate', 'error');
                });
        }

        // Función para guardar cambios
        function guardarCambios(event) {
            event.preventDefault();
            const formData = new FormData(document.getElementById('editForm'));
            const id = formData.get('id');

            fetch('/admin/editar-remate', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Object.fromEntries(formData))
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: '¡Éxito!',
                        text: 'Remate actualizado correctamente',
                        icon: 'success'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error(data.error || 'Error al actualizar el remate');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', error.message, 'error');
            });
        }

        // Función para eliminar remate
        function eliminarRemate(id, ubicacion, descripcion) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: `¿Quieres eliminar el remate en ${id,ubicacion}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/eliminar-remate?deleteId=${id}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.querySelector(`.property-card[data-id="${id}"]`).remove();
                            actualizarMetricas();
                            Swal.fire('Eliminado', 'El remate ha sido eliminado', 'success');
                        } else {
                            throw new Error(data.error || 'Error al eliminar el remate');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error', error.message, 'error');
                    });
                }
            });
        }

        // Función para cerrar modal
        function cerrarModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        // Inicializar métricas al cargar la página
        document.addEventListener('DOMContentLoaded', actualizarMetricas);

        // Cerrar modal al hacer clic fuera
        window.onclick = function(event) {
            if (event.target == document.getElementById('editModal')) {
                cerrarModal();
            }
        }
    </script>
</body>
</html>